{"version":3,"sources":["webpack:///./index.js"],"names":["list","insertAdjacentHTML","renderTitle","getStats","then","data","map","el","li","document","createElement","classList","add","markupItem","append","this","URL","querySelector","root","country","cases","todayCases","deaths","todayDeaths","recovered","active","critical","casesPerOneMillion","deathsPerOneMillion","markupTd","fetch","res","json","start","renderList","console","log","catch","err"],"mappings":"4KAiFc,I,WA9EV,aAAc,I,MAAA,O,EAiBD,WACTA,KAAKC,mBAAmB,YAAa,EAAKC,eAC1C,EAAKC,WAAWC,MAAK,SAAAC,GACjBA,EAAKC,KAAI,SAAAC,GACL,IAAMC,EAAKC,SAASC,cAAc,MAClCF,EAAGG,UAAUC,IAAI,aACjBJ,EAAGP,mBAAmB,YAAa,EAAKY,WAAWN,IACnD,EAAKP,KAAKc,OAAON,W,EAxBf,gB,EAAA,M,sFACVO,KAAKC,IAAM,qDACXD,KAAKf,KAAOS,SAASQ,cAAc,SACnCF,KAAKG,KAAOT,SAASQ,cAAc,S,2BAEvCf,YAAA,WACI,8V,EAuBJW,WAAA,SAAWN,GAcP,cAAeA,EAAGY,QAAlB,4BACWZ,EAAGa,MADd,4BAEWb,EAAGc,WAFd,4BAGWd,EAAGe,OAHd,4BAIWf,EAAGgB,YAJd,2BAKWhB,EAAGiB,UALd,2BAMWjB,EAAGkB,OANd,2BAOWlB,EAAGmB,SAPd,2BAQWnB,EAAGoB,mBARd,4BASYpB,EAAGqB,oBATf,uB,EAaJC,SAAA,SAAStB,GACL,aAAcA,EAAd,S,EAEJJ,SAAA,WAEI,OAAO2B,MADK,sDACM1B,MAAK,SAAA2B,GAAG,OAAIA,EAAIC,W,EAWtCC,MAAA,WACIlB,KAAKmB,c,OAMPD,QAINH,MADY,sDACD1B,MAAK,SAAA2B,GAAG,OAAIA,EAAIC,UACtB5B,MAAK,SAAAC,GAAI,OAAI8B,QAAQC,IAAI/B,MAAOgC,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,Q","file":"main.3f3c25768bc54c9ec8a8.js","sourcesContent":["import './styles.css';\n\nclass Covid {\n    constructor() {\n        this.URL = \"https://coronavirus-19-api.herokuapp.com/countries\"\n        this.list = document.querySelector('#list')\n        this.root = document.querySelector(\"#root\")\n    }\n    renderTitle() {\n        return `<td> СТРАНА </td>\n        <td> всего случаев </td>\n        <td> сегодня случаев </td>\n        <td> всего смертей </td>\n        <td> сегодня смертей</td>\n        <td> выздоровели</td>\n        <td> активные заражения</td>\n        <td> в критическом состоянии</td>\n        <td> случаев на 1 млн</td>\n        <td>  смертей на млн </td>`\n    }\n    renderList = () => {\n        list.insertAdjacentHTML(\"beforeend\", this.renderTitle())\n        this.getStats().then(data => {\n            data.map(el => {\n                const li = document.createElement('tr')\n                li.classList.add(\"list-item\")\n                li.insertAdjacentHTML(\"beforeend\", this.markupItem(el))\n                this.list.append(li)\n\n            })\n        })\n    }\n    markupItem(el) {\n        // const keys = Object.keys(el);\n        // const values = Object.values(el);\n        // const td = document.createElement('td')\n        // return td.insertAdjacentHTML('beforeend', () => {\n        //         values.map((el) => this.markupTd(el))\n        //     })\n        //     // td.value = [...values]\n        //     // return td\n        //     // td.append(...values)\n\n\n        // // return `<td>${[...values]}</td>`\n\n        return `<td> ${el.country} </td>\n            <td> ${el.cases} </td>\n            <td> ${el.todayCases} </td>\n            <td> ${el.deaths} </td>\n            <td> ${el.todayDeaths}</td>\n            <td> ${el.recovered}</td>\n            <td> ${el.active}</td>\n            <td> ${el.critical}</td>\n            <td> ${el.casesPerOneMillion}</td>\n            <td>  ${el.deathsPerOneMillion}</td>\n            `\n\n    }\n    markupTd(el) {\n        return `<td>${el}</td>`\n    }\n    getStats() {\n        const URL = \"https://coronavirus-19-api.herokuapp.com/countries\"\n        return fetch(URL).then(res => res.json())\n    }\n\n\n\n\n    // let query = input.value\n    // let queryResult = fetch(URL + \"/\" + query).then(res => res.json())\n    //     .then(data => console.log(data))\n    //     .catch(err => console.log(err));\n\n    start() {\n        this.renderList()\n    }\n}\n\n\nconst covid = new Covid()\ncovid.start()\n\n\nconst URL = \"https://coronavirus-19-api.herokuapp.com/countries\"\nfetch(URL).then(res => res.json())\n    .then(data => console.log(data)).catch(err => console.log(err));"],"sourceRoot":""}